@page
@model TimeTracker.Pages.Entries.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<label>Entries After</label> <input id="startDate" type="date"/>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TimeSheetEntries[0].Hours)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TimeSheetEntries[0].Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TimeSheetEntries[0].Job)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="entriesBody">
    </tbody>
</table>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
<script type="text/javascript">
    const startDate = $("#startDate");
    const table = $("#entriesBody");
    $(document).ready(function () {
        $.getJSON('../api/entries/', function (data) {
            setStartDateToSunday();
            startDate.change(() => createTableEntries(data));
            createTableEntries(data);
        });

        const createTableEntries = function (entries) {
            entries = entries.filter(e => new Date(e.date) > new Date(startDate.val()));
            table.empty();
            for (var entry of entries) {
                let row = $("<tr></tr>").appendTo(table);
                row.append(`<td> ${entry.hours}</td >`);
                row.append(`<td>${new Date(entry.date).toLocaleDateString()}</td>`);
                row.append(`<td>${entry.job.jobNumber} ${entry.job.description}</td>`);
                let td = $("<td></td>").appendTo(row);
                td.append(addActions(entry));
            }
        }

        const addActions = function (entry) {
            let actions = ['Edit', 'Details', 'Delete'];
            actions = actions.map(a => `<a href="/Entries/${a}?id=${entry.id}">${a}</a>`);
            return actions.join(' | ');
        }
    });
    const setStartDateToSunday = function () {
        let today = new Date();
        let sunday = new Date();
        sunday.setDate(today.getDate() - today.getDay());
        sunday.setHours(0,0,0,0);
        startDate.val(sunday.toISOString().substr(0, 10));
    }
</script>